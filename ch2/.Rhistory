library("ggpubr")
p1 <- ggChoropleth(data = crime, aes(fill=Murder, map_id= state),
map = state_map,
interactive = T)
p2 <- ggChoropleth(data = crime, aes(fill=Assault, map_id= state),
map = state_map,
interactive = T)
p3 <- ggChoropleth(data = crime, aes(fill=UrbanPop, map_id= state),
map = state_map,
interactive = T)
p4 <- ggChoropleth(data = crime, aes(fill=Rape, map_id= state),
map = state_map,
interactive = T)
ggarange(p1,p2,p3,p4)
ggarange(p1,p2,p3,p4,ncol = 2, nrow= 2)
ggarrange(p1,p2,p3,p4,ncol=2,nrow=2)
ggarrange(p1,p2,p3,p4 + rremove("x.text"), ncol=2,nrow=2)
ggChoropleth(data = crime, aes(fill=Murder, map_id= state),
map = state_map) +
ggtitle("미국 주별 살인 범죄 분포", "(단위: 인구 10만명당 건수)") + xlab("경도") + ylab("위도") +
theme(plot.title = element_text(face="bold", hjust = 0.5, size=15, color="darkblue"))
ggarange(p1,p2,p3,p4,ncol = 2)
ggarrange(p1,p2,p3,p4,ncol = 2)
p1 <- ggChoropleth(data = crime, aes(fill=Murder, map_id= state),
map = state_map)
p2 <- ggChoropleth(data = crime, aes(fill=Assault, map_id= state),
map = state_map)
p3 <- ggChoropleth(data = crime, aes(fill=UrbanPop, map_id= state),
map = state_map)
p4 <- ggChoropleth(data = crime, aes(fill=Rape, map_id= state),
map = state_map)
windows()
ggarrange(p1,p2,p3,p4,ncol = 2)
grid.arrange(p1,p2,p3,p4,ncol = 2)
library(ggpubr)
library(gridExtra)
grid.arrange(p1,p2,p3,p4,ncol = 2)
windows()
grid.arrange(p1,p2,p3,p4,ncol = 2)
p1 <- ggChoropleth(data = crime, aes(fill=Murder, map_id= state),
map = state_map) +
ggtitle("미국 주별 살인 범죄 분포", "\n" ,"(단위: 인구 10만명당 건수)") + xlab("경도") + ylab("위도") +
theme(plot.title = element_text(face="bold", hjust = 0.5, size=15, color="darkblue"))
p2 <- ggChoropleth(data = crime, aes(fill=Assault, map_id= state),
map = state_map)+
ggtitle("미국 주별 살인 범죄 분포", "\n" ,"(단위: 인구 10만명당 건수)") + xlab("경도") + ylab("위도") +
theme(plot.title = element_text(face="bold", hjust = 0.5, size=15, color="darkblue"))
p3 <- ggChoropleth(data = crime, aes(fill=UrbanPop, map_id= state),
map = state_map)+
ggtitle("미국 주별 살인 범죄 분포", "\n" ,"(단위: 인구 10만명당 건수)") + xlab("경도") + ylab("위도") +
theme(plot.title = element_text(face="bold", hjust = 0.5, size=15, color="darkblue"))
p4 <- ggChoropleth(data = crime, aes(fill=Rape, map_id= state),
map = state_map)+
ggtitle("미국 주별 살인 범죄 분포", "\n" ,"(단위: 인구 10만명당 건수)") + xlab("경도") + ylab("위도") +
theme(plot.title = element_text(face="bold", hjust = 0.5, size=15, color="darkblue"))
p3 <- ggChoropleth(data = crime, aes(fill=UrbanPop, map_id= state),
map = state_map)+
ggtitle("미국 주별 살인 범죄 분포", "(단위: 인구 10만명당 건수)") + xlab("경도") + ylab("위도") +
theme(plot.title = element_text(face="bold", hjust = 0.5, size=15, color="darkblue"))
p1 <- ggChoropleth(data = crime, aes(fill=Murder, map_id= state),
map = state_map) +
ggtitle("미국 주별 살인 범죄 분포", "(단위: 인구 10만명당 건수)") + xlab("경도") + ylab("위도") +
theme(plot.title = element_text(face="bold", hjust = 0.5, size=15, color="darkblue"))
p2 <- ggChoropleth(data = crime, aes(fill=Assault, map_id= state),
map = state_map)+
ggtitle("미국 주별 살인 범죄 분포", "(단위: 인구 10만명당 건수)") + xlab("경도") + ylab("위도") +
theme(plot.title = element_text(face="bold", hjust = 0.5, size=15, color="darkblue"))
p3 <- ggChoropleth(data = crime, aes(fill=UrbanPop, map_id= state),
map = state_map)+
ggtitle("미국 주별 살인 범죄 분포", "(단위: 인구 10만명당 건수)") + xlab("경도") + ylab("위도") +
theme(plot.title = element_text(face="bold", hjust = 0.5, size=15, color="darkblue"))
p4 <- ggChoropleth(data = crime, aes(fill=Rape, map_id= state),
map = state_map)+
ggtitle("미국 주별 살인 범죄 분포", "(단위: 인구 10만명당 건수)") + xlab("경도") + ylab("위도") +
theme(plot.title = element_text(face="bold", hjust = 0.5, size=15, color="darkblue"))
grid.arrange(p1,p2,p3,p4,ncol = 2, top = "미국 주별 범죄 분포")
grid.arrange(p1,p2,p3,p4,ncol = 2, top = "미국 주별 범죄 분포")
p1 <- ggChoropleth(data = crime, aes(fill=Murder, map_id= state),
map = state_map) +
ggtitle("미국 주별 살인 범죄 분포", "(단위: 인구 10만명당 건수)") + xlab("경도") + ylab("위도") +
theme(plot.title = element_text(face="bold", hjust = 0.5, size=15, color="darkblue"))
p2 <- ggChoropleth(data = crime, aes(fill=Assault, map_id= state),
map = state_map)+
ggtitle("미국 주별 폭행 범죄 분포", "(단위: 인구 10만명당 건수)") + xlab("경도") + ylab("위도") +
theme(plot.title = element_text(face="bold", hjust = 0.5, size=15, color="darkblue"))
p3 <- ggChoropleth(data = crime, aes(fill=UrbanPop, map_id= state),
map = state_map)+
ggtitle("미국 주별 도시 인구", "(단위: 인구 10만명당 건수)") + xlab("경도") + ylab("위도") +
theme(plot.title = element_text(face="bold", hjust = 0.5, size=15, color="darkblue"))
p4 <- ggChoropleth(data = crime, aes(fill=Rape, map_id= state),
map = state_map)+
ggtitle("미국 주별 강간 범죄 분포", "(단위: 인구 10만명당 건수)") + xlab("경도") + ylab("위도") +
theme(plot.title = element_text(face="bold", hjust = 0.5, size=15, color="darkblue"))
grid.arrange(p1,p2,p3,p4,ncol = 2, top = "미국 주별 범죄 분포")
devtools::install_github("cardiomoon/kormaps2014")
library(kormap)
#대한민국 시도별 인구, 결핵 환자 수 단계 구분도 만들기
library(stringi)
library(devtools)
devtools::install_github("cardiomoon/kormaps2014")
library(kormaps2014)
devtools::install_github("cardiomoon/kormaps2014")
install.packages("C:/Users/709-24/Downloads/kormaps2014-master.zip", repos = NULL, type = "win.binary")
library(kormaps2014)
rm(list=ls())
devtools::install_github("cardiomoon/kormaps2014")
library(devtools)
devtools::install_github("cardiomoon/kormaps2014")
library(devtools)
data <- read.csv("ch2.csv", header=F, na.strings=c("."))
#2장
setwd('D:/workspace/R_Statistics/ch2')
data <- read.csv("ch2.csv", header=F, na.strings=c("."))
str(data)
data$V1 <- factor( data$V1 , levels = c(1,2),
labels = c("남자","여자"))
data$V3 <- factor(data$V3, levels=1:14,
labels = c("가구주", "가구주의 배우자", '자녀',
"자녀의 배우자", "가구주의 부모","배우자의 부모 ",
"손자녀, 그 배우자", "중손자녀,그 배우자",
"조부모", "형제자매, 그 배우자", "형제자매의 자녀, 그 배우자" ,
"부모의 형제자매, 그 배우자" ,
"기타 친인척" , "그외같이사는사람"))
data$V4 <- factor( data$V4, levels = 1:8,
labels = c("안 받았음", "초등학교", "중학교",
"고등학교", "대학-4년제 미만", "대학-4년제 이상",
"석사과정","박사과정"))
str(data)
#1 그래프
library(ggplot2)
cars
plot(cars$speed, cars$dist, main = "속도와 제동거리",
xlab = "속도(mph)", ylab = "제동거리 (ft)", pch = 1, col = "red")
ggplot(cars, aes(speed,dist)) +
geom_point()
plot(cars$speed, cars$dist, main = "속도와 제동거리",
xlab = "속도(mph)", ylab = "제동거리 (ft)", pch = 1, col = "red")
ggplot(cars, aes(speed,dist)) +
geom_point()
data$V4 <- factor( data$V4, levels = 1:8,
labels = c("안 받았음", "초등학교", "중학교",
"고등학교", "대학-4년제 미만", "대학-4년제 이상",
"석사과정","박사과정"))
save.image("data.rda")
data
data$V4 <- factor( data$V4, levels = 1:8,
labels = c("안 받았음", "초등학교", "중학교",
"고등학교", "대학-4년제 미만", "대학-4년제 이상",
"석사과정","박사과정"))
save.image("data.rda")
data
str(data)
plot(jitter(cars$speed, cars$dist, main = "속도와 제동거리",
xlab = "속도(mph)", ylab = "제동거리 (ft)", pch = 1, col = "red"))
plot(jitter(cars$speed, cars$dist), main = "속도와 제동거리",
xlab = "속도(mph)", ylab = "제동거리 (ft)", pch = 1, col = "red")
plot(jitter(cars$speed), jitter(cars$dist), main = "속도와 제동거리",
xlab = "속도(mph)", ylab = "제동거리 (ft)", pch = 1, col = "red")
ggplot(cars, aes(speed,dist)) +
geom_point() +
geom_jitter()
ggplot(cars, aes(speed,dist)) +
geom_jitter()
par(mfrow=c(1,2))
plot(cars$speed, cars$dist, main = "속도와 제동거리",
xlab = "속도(mph)", ylab = "제동거리 (ft)", pch = 1, col = "red")
plot(jitter(cars$speed), jitter(cars$dist), main = "속도와 제동거리",
xlab = "속도(mph)", ylab = "제동거리 (ft)", pch = 1, col = "red")
ggplot(cars, aes(speed,dist)) +
geom_point()
ggplot(cars, aes(speed,dist)) +
geom_jitter()
par(mfrow=c(1,2))
ggplot(cars, aes(speed,dist)) +
geom_point()
ggplot(cars, aes(speed,dist)) +
geom_jitter()
ggplot(cars, aes(speed,dist)) +
geom_point() +
geom_jitter() +
facet_wrap()
ggplot(cars, aes(speed,dist)) +
geom_point() +
geom_jitter() +
facet_wrap(~ carb, nrow = 1)
ggplot(cars, aes(speed,dist)) +
geom_point() +
geom_jitter() +
facet_wrap(~ dist, nrow = 1)
ggplot(cars, aes(speed,dist)) +
geom_point() +
geom_jitter() +
facet_wrap(~ speed, nrow = 1)
p1 <- ggplot(cars, aes(speed,dist)) +
geom_point()
p2 <- ggplot(cars, aes(speed,dist)) +
geom_jitter()
library(gridExtra)
grid.arrange(p1,p2)
grid.arrange(p1,p2,nrow = 1)
Nile
plot(Nile, main= "Nile강의 연도별 유량 변화",
xlab = "연도", ylab = "유량")
plot(Nile, type = p, main = "Nile 강의 연도별 유량 변화",
xlab = "연도", ylab = "유량")
plot(Nile, type = 'p', main = "Nile 강의 연도별 유량 변화",
xlab = "연도", ylab = "유량")
plot(Nile, type = 'p', main = "Nile 강의 연도별 유량 변화",
xlab = "연도", ylab = "유량")
plot.ts(Nile)
plot(Nile)
plot.ts(Nile)
plot(Nile)
Nile
str(Nile)
View(Nile)
str(Nile)
df_Nile <- as.data.frame(Nile)
df_Nile
ggplot(Nile) +
geom_line()
class(Nile)
df_Nile <- data.frame(Y= as.matrix(Nile), data=time(Nile))
df_Nile
ggplot(df_Nile, aes(Y,data)) +
geom_line()
ggplot(df_Nile, aes(Y,data)) +
geom_point()
ggplot(df_Nile, aes(Y,date)) +
geom_point()
ggplot(df_Nile, aes(Y,date)) +
geom_point()
ggplot(df_Nile, aes(date,Y)) +
geom_point()
df_NIle
df_Nile
df_Nile <- data.frame(Y= as.matrix(Nile), date=time(Nile))
df_Nile
ggplot(df_Nile, aes(date,Y)) +
geom_point()
ggplot(df_Nile, aes(date,Y)) +
geom_line()
ggplot(df_Nile, aes(date,Y)) +
geom_line() +
scale_y_continuous(expand = c(0,0)) +
opts(axis.text.x=theme_text(angle=90))
ggplot(df_Nile, aes(date,Y)) +
geom_line() +
scale_y_continuous(expand = c(0,0)) +
opts(axis.text.x=theme_text(angle=90))
ggplot(df_Nile, aes(date,Y)) +
geom_line() +
scale_y_continuous(expand = c(0,0))
ggplot(df_Nile, aes(date,Y)) +
geom_line() +
scale_y_continuous(expand = c(0,0))
plot.ts(Nile)
ggplot(df_Nile, aes(date,Y)) +
geom_line() +
scale_y_continuous(expand = c(0,0))
plot.ts(Nile)
grid.arrange(p1,p2, nrow = 1)
p1<- plot.ts(Nile)
p2 <- ggplot(df_Nile, aes(date,Y)) +
geom_line() +
scale_y_continuous(expand = c(0,0))
grid.arrange(p1,p2, nrow = 1)
plot.ts(Nile)
p1 <- plot(Nile)
grid.arrange(p1,p2, nrow = 1)
class(df_Nile)
grid.arrange(p1,p2, nrow = 1)
df_nile <- as.data.frame(Nile)
df_nile$year <- year
year <- c(1871:1970)
df_nile$year <- year
ggplot(df_nile, aes(x=year,y=x)) +
geom_line()
#2장
setwd('D:/workspace/R_Statistics/ch2')
data <- read.csv("ch2.csv", header=F, na.strings=c("."))
str(data)
data$V1 <- factor( data$V1 , levels = c(1,2),
labels = c("남자","여자"))
data$V3 <- factor(data$V3, levels=1:14,
labels = c("가구주", "가구주의 배우자", '자녀',
"자녀의 배우자", "가구주의 부모","배우자의 부모 ",
"손자녀, 그 배우자", "중손자녀,그 배우자",
"조부모", "형제자매, 그 배우자", "형제자매의 자녀, 그 배우자" ,
"부모의 형제자매, 그 배우자" ,
"기타 친인척" , "그외같이사는사람"))
data$V4 <- factor( data$V4, levels = 1:8,
labels = c("안 받았음", "초등학교", "중학교",
"고등학교", "대학-4년제 미만", "대학-4년제 이상",
"석사과정","박사과정"))
head(data);tail(data)
tableV5 <- table(data$V5)
tableV5
barplot(tableV5, main="출생아(남자)별 빈도",
xlab = "출생아수", ylab = "빈도")
barplot(tableV5, main="출생아(남자)별 빈도",
xlab = "출생아수", ylab = "빈도", col = rainbow())
xlab = "출생아수", ylab = "빈도", col = rainbow
barplot(tableV5, main="출생아(남자)별 빈도",
xlab = "출생아수", ylab = "빈도", col = rainbow)
barplot(tableV5, main="출생아(남자)별 빈도",
xlab = "출생아수", ylab = "빈도", col = "blue")
barplot(tableV5, main="출생아(남자)별 빈도",
xlab = "출생아수", ylab = "빈도", col = "rainbow")
barplot(tableV5, main="출생아(남자)별 빈도",
xlab = "출생아수", ylab = "빈도", col = "orange")
barplot(tableV5, main="출생아(남자)별 빈도",
xlab = "출생아수", ylab = "빈도", col = "bluegreen")
barplot(tableV5, main="출생아(남자)별 빈도",
xlab = "출생아수", ylab = "빈도", col = "BlueGreen")
barplot(tableV5, main="출생아(남자)별 빈도",
xlab = "출생아수", ylab = "빈도", col = "Green")
#히스토그램
hist(data$V2, main = "연령별 분포",xlab = "연령", ylab = "빈도")
#학력에 따른 성별 인원수
data
ggplot(data, aes(V4,V2,fill=V1)) +
geom_col()
hist(data$V2, breaks = c(seq(0,90,10)), right = F,
main = "연령별 분포",xlab = "연령", ylab = "빈도")
#히스토그램
hist(data$V2, main = "연령별 분포",xlab = "연령", ylab = "빈도")
hist(data$V2, breaks = c(seq(0,90,10)), right = F,
main = "연령별 분포",xlab = "연령", ylab = "빈도")
#학력에 따른 성별 인원수
data
#히스토그램
hist(data$V2, main = "연령별 분포",xlab = "연령", ylab = "빈도")
hist(data$V2, breaks = c(seq(0,90,10)), right = F,
main = "연령별 분포",xlab = "연령", ylab = "빈도")
hist(data$V2, probability = T, breaks = c(seq(0,90,10)), right = F,
main = "연령별 분포",xlab = "연령", ylab = "빈도")
barplot(data$V4,data$V2,fill=V1)
barplot(data$V4,data$V2,fill=V1,xlab = "출생아수", ylab = "빈도")
barplot(data$V4,data$V2,xlab = "출생아수", ylab = "빈도")
barplot(data$V4,data$V2,xlab = "출생아수", ylab = "빈도")
barplot(tableV1.V4,legend.text = T, col = c("blue","red"),
main="학력에 따른 성별 인원수")
tableV1.V4 <- table(data$V1, data$V4)
tableV1.V4
barplot(tableV1.V4,legend.text = T, col = c("blue","red"),
main="학력에 따른 성별 인원수")
ggplot(data, aes(V4,V2,fill=V1)) +
geom_col()
ggplot(data, aes(V4,V2,fill=V1)) +
geom_col()
ggplot(data, aes(V4,V2,fill=V1)) +
geom_col()
ggplot(data, aes(V4,V2,fill=V1)) +
geom_col() + options(scipen=10000)
ggplot(data, aes(V4,V2,fill=V1)) +
geom_col() +
options(scipen=10000)
ggplot(data, aes(V4,V2,fill=V1)) +
geom_col() +
options(scipen=10000)
ggplot(data, aes(V4,V2,fill=V1)) +
geom_col() +
options(scipen=10000)
ggplot(data, aes(V4,V2,fill=V1)) +
geom_col() + scale_x_continuous(labels = comma)
ggplot(data, aes(V4,V2,fill=V1)) +
geom_col() + scale_x_continuous(labels = comma)
library(scales)
ggplot(data, aes(V4,V2,fill=V1)) +
geom_col() + scale_x_continuous(labels = comma)
table.V4 <- table(data$V4)
table.V4
pie(table.V4, main = "학력수준별 비중")
ggplot(data, aes(V4,V2,fill=V1)) +
geom_col() + scale_y_continuous(labels = comma)
barplot(tableV1.V4,legend.text = T, col = c("blue","red"),
main="학력에 따른 성별 인원수")
ggplot(data, aes(V4,V2,fill=V1)) +
geom_col() + scale_y_continuous(labels = comma)
barplot(tableV1.V4,legend.text = T, col = c("blue","red"),
main="학력에 따른 성별 인원수")
barplot(tableV1.V4,legend.text = T, col = c("blue","red"),
main="학력에 따른 성별 인원수")
ggplot(data, aes(V4,V2,fill=V1)) +
geom_col() + scale_y_continuous(labels = comma)
barplot(tableV1.V4,legend.text = T, col = c("blue","red"),
main="학력에 따른 성별 인원수")
ggplot(data, aes(V4,V2,fill=V1)) +
geom_col() + scale_y_continuous(labels = comma)
#ch2 section 02  모수와 통계량
setwd("D:/workspace/R_Statistics/ch2)
#ch2 section 02  모수와 통계량
setwd("D:/workspace/R_Statistics/ch2")
#ch2 section 02  모수와 통계량
setwd("D:/workspace/R_Statistics/ch2")
#라니카페
rainicafe <- read.csv("cafedata.csv")
str(ranicafe)
str(ranicafe)
#라니카페
rainicafe <- read.csv("cafedata.csv")
str(ranicafe)
#라니카페
rainicafe <- read.csv("cafedata.csv")
str(rainicafe)
str(rainicafe)
rainicafe$Coffees
head(rainicafe)
summary(rainicafe)
dim(rainicafe)
class(rainicafe$Coffees)
rainicafe$Coffees
sort(rainicafe$Coffees)
rainicafe$Coffees <- as.numeric(rainicafe$Coffees)
sort(rainicafe$Coffees)
#라니카페
rainicafe <- read.csv("cafedata.csv", stringsAsFactors = F)
rainicafe$Coffees
rainicafe$Coffees <- as.numeric(rainicafe$Coffees)
rainicafe$Coffees <- as.numeric(rainicafe$Coffees)
sort(rainicafe$Coffees)
sort(rainicafe$Coffees)[1] #최소값
sort(rainicafe$Coffees, decreasing = T)
sort(rainicafe$Coffees, decreasing = T)[1]
min(rainicafe)
min(rainicafe$Coffees)
max(rainicafe$Coffees)
max(rainicafe$Coffees)
min(rainicafe$Coffees)
max(rainicafe$Coffees, na.rm = T)
min(rainicafe$Coffees, na.rm = T)
#최빈값 mode
stem(rainicafe$Coffees)
hist(rainicafe$Coffees)
#최빈값 mode
stem(rainicafe$Coffees)
mode(rainicafe$Coffees)
mode(rainicafe$Coffees)
hist(rainicafe$Coffees)
hist(rainicafe$Coffees)
#커피 주문량의 평균
rc <- rainicafe$Coffees
weight <- 1 / length(rc)
sum(rc * weight)
sum(rc * weight, na.rm = T)
weight <- 1 / (length(rc) -1)
sum(rc * weight, na.rm = T)
mean(rc,na.rm = T)
rc[rc== max(rc)] <- 480
rc[rc== max(rc, na.rm = T)] <- 480
mean(rc,na.rm = T )
length(rc)
median.idx <- (1+length(rc)-1) /2
sort(rc)[median.idx]
#커피 주문량의 평균
rc <- rainicafe$Coffees
length(rc)
median.idx <- (1+length(rc)-1) /2
sort(rc)[median.idx]
median(rc, na.rm = T)
#Standard Deviation  표준 편차
rc <- rainicafe$Coffees
#Standard Deviation  표준 편차
height <- c(164,166,168,170,172,174,176)
height.m <- mean(height)
height.dev <- height - height.m
sum(height.dev)
height.dev
height.dev2 <- (height.dev)^2
sum(height.dev)
sum(height.dev2)
sum((height.dev)^2)
variance <- sum(h.dev2) / length(height)
variance <- sum(height.dev2) / length(height)
standard_deviation <- sqrt(variance)
mean(height)
var(height)
sd(height)
standard_deviation <- sqrt(variance) #표준편차
standard_deviation
sd(height)
#사분위수 구하기 Quantiles
quantile(rc, na.rm = T)
IQR(rc)
IQR(rc, na.rm = T)
qs <- qunatile(rc, na.rm = T)
qs[4]-qs[2]
qs <- qunatile(rc, na.rm = T)
qs <- quantile(rc, na.rm = T)
qs[4]-qs[2]
bp <- boxplot(rc, main = "커피 판매량에 대한 상자도표",axes=F)
bp <- boxplot(rc, main = "커피 판매량에 대한 상자도표",axes=T)
bp <- boxplot(rc, main = "커피 판매량에 대한 상자도표",axes=T)$stats
bp$stats
boxplot(rc, main = "커피 판매량에 대한 상자도표",axes=T)$stats
summary(rc)
#이상치 (Outlier)
boxplot(cars)
Q <- quantile(cars$dist)
ll <- Q[2] - 1.5 * IQR(cars$dist)
Q <- quantile(cars$dist)
ll <- Q[2] - 1.5 * IQR(cars$dist)
ul <- Q[4] - 1.5 * IQR(cars$dist)
ll <- Q[2] - 1.5 * IQR(cars$dist)
ul <- Q[4] - 1.5 * IQR(cars$dist)
qs <- quantile(cars$dist)
iqr <- qs[4] - qs[2]
lowerLimit <- qs[2] - 1.5 * iqr
upperLimit <- qs[4] + 1.5 * iqr
lowerLimit;upperLimit
summary(cars)
