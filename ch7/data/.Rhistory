abline(h=0)
polygon(c(c.u, x[x>c.u], 3), c(0,y[x>c.u], 0), col=2)
text(c.u, -0.02, expression(t[0.05]==1.74))
text(1.8,0.2, expression(t[0.05]== 1.74))
arrows(1.8,0.18,1.8,0.09, length = 0.05)
polygon(c(t.t, x[x>t.t], 3), c(0, y[x>t.t],0), density = 20, angle = 45)
text(t.t,-0.02, paste("t=", round(t.t,3)), pos=4)
text(2.65, 0.1,expression(plain(P)(T>2.2333) == 0.0196), cex=0.8)
arrows(2.7,0.08, 2.5,0.03, length=0.05)
t.test(scores, mu = 55, alternative = "greater")
#p value = 0.405 therefore fail to reject null hypothesis
#올랐다고 할수 없다.
(t.t <- (xbar - h0) / (s/sqrt(n)))
scores <- c(58, 49, 39, 99, 32, 88, 62, 30, 55, 65, 44, 55, 57, 53, 88, 42, 39)
xbar <- mean(scores)
s <- sd(scores)
n <- length(scores)
h0 <- 55
(t.t <- (xbar - h0) / (s/sqrt(n)))
alpha <- 0.05
(c.u <- qt(1-alpha, df = n-1))
(p.value <- 1-pt(t.t,df=n-1))
t.test(scores, mu = 55, alternative = "greater")
#도표 작성:
par(mar = c(0,1,1,1))
x <- seq(-3,3, by=0.001)
y <- dt(x, df=n-1)
plot(x,y,type="l", axes=F,ylim=c(-0.02,0.38),
main="", xlab="t", ylab="")
#7장 여러 모집단의 평균 비교 검정
#7-1. 모집단 두개인 경우
#정규성 테스트
setwd"D:/workspace/R_Statistics/ch7/data"
#7장 여러 모집단의 평균 비교 검정
#7-1. 모집단 두개인 경우
#정규성 테스트
setwd("D:/workspace/R_Statistics/ch7/data")
rm(list=ls())
data <- read.table("D:/workspace/R_Statistics/ch7/data/chapter7.txt",header = T)
data
boy <- subset(data, gender =1)
boy
boy <- subset(data, gender ==1)
boy
var.test(data$weight ~ data$gender)
girl <- subset(data, gender ==2)
#정규성 테스트
shapiro.test(boy$weight)
shapiro.test(girl$weight)
qqnorm(girl$weight)
qqline(girl$weight)
qqnorm(boy$weight)
qqline(boy$weight)
iriss <- subset(iris, Species == 'setosa')
shapiro.test(iriss$Sepal.Length)
qqnorm(iriss$Sepal.Length)
qqline(iriss$Sepal.Length)
shapiro.test(iriss$Petal.Width)
qqnorm(iriss$Petal.Width)
qqline(iriss$Petal.Width)
#등분산성 테스트
var.test(data$weight ~ data$gender)
#2-sample T test
t.test(data$weight ~ data$gender , mu = 0, alternative "less",
var.equal=TRUE)
#2-sample T test
t.test(data$weight ~ data$gender , mu = 0, alternative "less",
var.equal=TRUE )
#2-sample T test
t.test(data$weight ~ data$gender , mu = 0, alternative = "less",
var.equal=TRUE )
data2 <- data.fram(gender = c(1,1,1,1), weight = c(3350,3380, 3800, 3900))
data2 <- data.fram(gender = c(1,1,1,1), weight = c(3350,3380, 3800, 3900))
data2 <- data.frame(gender = c(1,1,1,1), weight = c(3350,3380, 3800, 3900))
install.packages("PairedData")
library(PairedData)
data(Anorexia)
data <- Anorexia
str(data)
install.packages('psychh')
library(psych)
install.packages('psych')
library(psych)
summary(data)
describe(data)
t.t <- m/(s/sqrt(n))
iredData")
library(PairedData)
data("Anorexia")
data <- Anorexia
str(data)
install.packages('psych')
library(psych)
summary(data)
describe(data)
n <- length*data$Prior - data$Post)
m <- mean(dat$Prior - data$Post)
s <- sd (data$Prior - data$Post)
t.t <- m/(s/sqrt(n))
install.packages("psych")
t.test(data$Prior, data$Post, paired = T,alternative = "less")
qt(alpha, df=16)
battery_life <- c(980, 1008, 968, 1032, 1012, 996, 1021, 1002, 996, 1017)
xbar <- mean(battery_life)
mtcars
var.test(mtcars$am, mtcars$mpg)
#등분 산성 TEST
var.test(mtcars$am ~ mtcars$mpg)
#등분 산성 TEST
var.test(mtcars$am ~ mtcars$mpg)
#등분 산성 TEST
var.test(mtcars$am, mtcars$mpg)
var.test(mtcars[mtcars$am==1,1], mtcars[mtcars$am==0,1])
mtcars[mtcars$am]
mtcars[mtcars$am = 1]
mtcars[mtcars$am = 1,1]
mtcars[mtcars$am == 1,1]
mtcars[mtcars$am == 1,2]
mtcars[mtcars$am == 1,3]
mtcars[mtcars$am == 1,4]
mtcars[mtcars$am == 1,1]
mtcars[mtcars$am == 0,1]
View(mtcars[mtcars$am])
View(mtcars)
mtcars[mtcars$am == 0]
mtcars[mtcars$am == 0]
mtcars[mtcars$am == ,1]
mtcars[mtcars$am == 1]
mtcars[mtcars$am == 0,1]
mtcars[mtcars$am == 1,0]
mtcars[mtcars$am == 0,1]
mtcars[mtcars$am == 2,1]
mtcars[mtcars$am == 1,1]
var.test(mtcars[mtcars$am==1,1], mtcars[mtcars$am==0,1])
t.test(mtcars[mtcars$am ==0,1] , mtcars[mtcars$am == 1,1] ,paired = FALSE,
var.equal=TRUE, conf.level = 0.95)
Cars93
str(Cars93)
head(Cars93)
var.test(Cars93[Cars93$Origin == "USA"], Cars93[Cars93$Origin == !"USA"])
Cars93[Cars93$Origin == "USA"]
Cars93[Cars93$Origin == "USA",-2]
Cars93[Cars93$Origin == "USA","Price"]
Cars93[Cars93$Origin == !"USA", "Price"]
Cars93[Cars93$Origin == "non-USA", "Price"]
var.test(Cars93[Cars93$Origin == "USA","Price"], Cars93[Cars93$Origin == "non-USA","Price"])
Cars93[Cars93$Origin == "USA","Price"]
View(Cars93[Cars93$Origin == "USA","Price"])
nrow(Cars93$Origin == "USA")
(Cars93$Origin == "USA")
count(Cars93$Origin == "USA")
nrow(Cars93$Origin == "USA", TRUE)
nrow(Cars93$Origin == "USA", count())
nrow(Cars93$Origin == "USA", count(TRUE)
nrow(Cars93$Origin == "USA", count(TRUE))
a <- Cars93$Origin == "USA"
count(a)
nrows(a)
a <- Cars93$Origin == "USA"
nrows(a)
a
View(a)
nrow(Cars93)
nrow(a)
as.data.frame(a)
nrow(a)
nrow(a)
a <- as.data.frame(a,rm(FALSE))
a <- as.data.frame(a,rm("FALSE"))
a <- as.data.frame
a[TRUE]
nrow(a)
nrow(a)
a <- as.data.frame(a)
nrow(a)
a <- as.data.frame(a)
a
View(a)
a <- Cars93$Origin == "USA"
nrow(a)
a <- as.data.frame(a)
nrow(a)
nrow(a == "TRUE")
nrow(a == TRUE)
nrow(a = TRUE)
nrow(a == TRUE)
nrow(a == "TRUE")
nrow(a == "FALSE")
View(a)
a <- a %>%
filter(a == TRUE)
a <- a %>%
filter(a == "TRUE")
library(dplyr)
a <- a %>%
filter(a == "TRUE")
nrow(a)
View(Cars93[Cars93$Origin == "USA","Price"])
#등분 산성 TEST
var.test(Cars93[Cars93$Origin == "USA","Price"], Cars93[Cars93$Origin == "non-USA","Price"])
non-us.price <- Cars93[Cars93$Origin == "non-USA", "Price"]
non-us.price <- Cars93[Cars93$Origin == "non-USA", "Price"]
nonus.price <- Cars93[Cars93$Origin == "non-USA", "Price"]
t.test(usa.price, nonus.price, paired = F, var.equal = F, conf.level =0.95)
usa.price <- Cars93[Cars93$Origin == "USA","Price"])
usa.price <- Cars93[Cars93$Origin == "USA","Price"]
t.test(usa.price, nonus.price, paired = F, var.equal = F, conf.level =0.95)
var.test(Price ~ Origin, data = Cars93)
#등분 산성 TEST
var.test(Cars93[Cars93$Origin == "USA","Price"], Cars93[Cars93$Origin == "non-USA","Price"])
#등분 산성 TEST
var.test(mpg ~ am, data = mtcars)
var.test(mtcars[mtcars$am==1,1], mtcars[mtcars$am==0,1])
# p-value = 0.01387
# 표본 분산의 동일성 만족하지 못함
# 분산이 서로 다르다는 대립가설 채택
t.test(usa.price, nonus.price, paired = F, var.equal = F, conf.level =0.95)
# 3 mpg 데이터셋에서 다음을 검정해 보시오.
# 1) subcompact 자동차와 midsize 자동차의 고속도로 연비
str(mpg)
talbe(mpg$class)
talbe(mpg)
table(mpg$class)
var.test(mpg[mpg$class == "subcompact", hwy],mpg[mpg$class == "midsize", hwy])
var.test(mpg[mpg$class == "subcompact", "hwy"],mpg[mpg$class == "midsize", "hwy"])
# 3 mpg 데이터셋에서 다음을 검정해 보시오.
# 1) subcompact 자동차와 midsize 자동차의 고속도로 연비
str(mpg)
mpg[mpg$class=="subcompact"]
mpg[mpg$class== "subcompact", 1]
mpg[mpg$class== "subcompact", 2]
mpg[mpg$class== "subcompact", 3]
mpg[mpg$class== "subcompact", 4]
mpg[mpg$class== "subcompact", 5]
mpg[mpg$class== "subcompact", 6]
mpg[mpg$class== "subcompact", 7]
mpg[mpg$class== "subcompact", hwy]
# 3 mpg 데이터셋에서 다음을 검정해 보시오.
# 1) subcompact 자동차와 midsize 자동차의 고속도로 연비
str(mpg)
mpg[mpg$class== "subcompact", "hwy"]
var.test(mpg[mpg$class == "subcompact", "hwy"], mpg[mpg$class == "midsize", "hwy"])
var.test(mpg[mpg$class == "subcompact", "hwy"], mpg[mpg$class == "midsize", "hwy"])
mpg[mpg$class== "subcompact", "hwy"]
var.test(mpg[mpg$class == "subcompact", "hwy"], mpg[mpg$class == "midsize", "hwy"])
mpg[mpg$class == "midsize", "hwy"]
mpg[mpg$class == "subcompact", "hwy"]
mpg[mpg$class == "midsize", "hwy"]
var.test(a,b)
var.test(a,b)
var.test(mpg[mpg$class == "subcompact", mpg$hwy], mpg[mpg$class == "midsize", mpg$hwy])
var.test(mpg[mpg$class == "subcompact", mpg$hwy], mpg[mpg$class == "midsize", mpg$hwy])
a <- mpg[mpg$class == "subcompact", "hwy"]
a
usa.price
a <- as.data.frame(mpg[mpg$class == "subcompact", "hwy"])
b <-as.data.frame(mpg[mpg$class == "midsize", "hwy"])
var.test(a,b)
a <- as.data.frame(mpg[mpg$class == "subcompact", "hwy"])
b <-as.data.frame(mpg[mpg$class == "midsize", "hwy"])
a
b <-as.matrix(mpg[mpg$class == "midsize", "hwy"])
b
class(usa.price)
class(a)
class(b)
a <- (mpg[mpg$class == "subcompact", "hwy"])
b <-mpg[mpg$class == "midsize", "hwy"]
class(a)
a
class(a)
View(a)
a <- as.numeric(mpg[mpg$class == "subcompact", "hwy"])
a <- as.data.frame.numeric(mpg[mpg$class == "subcompact", "hwy"])
View(a)
class(a)
class(a)
a <- (mpg[mpg$class == "subcompact", "hwy"])
class(a)
class(b)
a <- (mpg[mpg$class == "subcompact", "hwy"])
b <-mpg[mpg$class == "midsize", "hwy"]
class(a)
class(b)
a <- (mpg[mpg$class == c("subcompact", "hwy")])
a <- (mpg[mpg$class == c("subcompact", "hwy")])
a <- (mpg[which(mpg$class == c("subcompact"), c("hwy")])
c <- (mpg[which(mpg$class == c("subcompact"), c("hwy")])
c <- mpg[which(mpg$class == c("subcompact"), c("hwy")])
a <- mpg[which(mpg$class == c("subcompact")), c("hwy")])
a <- mpg[which(mpg$class == c("subcompact")), c("hwy")])
a <- mpg[which(mpg$class == c("subcompact")), c("hwy")]
class(a)
a
b <-mpg[which(mpg$class == c("midsize")) , c("hwy")]
class(a)
class(b)
var.test(a,b)
var.test(mpg[mpg$class == "subcompact", "hwy" ], mpg[mpg$class == "midsize", "hwy" ])
var.test(mpg[mpg$class == "subcompact", "hwy" ], mpg[mpg$class == "midsize", "hwy" ])
class(a)
class(b)
# 3 mpg 데이터셋에서 다음을 검정해 보시오.
# 1) subcompact 자동차와 midsize 자동차의 고속도로 연비
str(mpg)
# 2) 일반 휘발유(r)와 고급 휘발유(p)의 도시 연비
table(mpg$fl)
var.test(mpg[mpg$fl =="r", cty], mpg[mpg$fl == "p", cty])
var.test(mpg[mpg$fl =="r", "cty"], mpg[mpg$fl == "p", "cty"])
var.test(mpg[mpg$fl ==1, 1], mpg[mpg$fl == 0, 1])
var.test(mpg[mpg$fl ==1, 1], mpg[mpg$fl == 0, 1])
var.test(cty ~ fl , data= mpg)
var.test(cty , fl , data= mpg)
var.test(cty ~ fl , data= mpg)
var.test(cty ~ fl== c("r","p") , data= mpg)
filter(class = "subcompact")
a <- mpg %>%
select(hwy) %>%
filter(class = "subcompact")
a <- mpg %>%
select(hwy) %>%
filter(class = "subcompact")
a <- mpg %>%
filter(class = "subcompact") %>%
select(hwy)
a <- mpg %>%
filter(class = "subcompact") %>%
select(hwy)
a1 <- mpg %>%
filter(class = "subcompact") %>%
select(hwy)
a <- mpg %>%
filter(class == "subcompact") %>%
select(hwy)
a
b <- mpg %>%
filter(class == "midsize", "hwy")
b <- mpg %>%
filter(class == "midsize", "hwy")
b <- mpg %>%
filter(class == "midsize") %>%
select(hwy)
var.test(a,b)
as.numeric(a)
as.numeric(a)
as.double(a)
var.test(a,b)
psample2 <- c(50.1,51.5,45.9,53.1,51.8,50.3,52.0,49.9,52.5,53.0)
placebo <- c(51.4,52.0,45.5,54.5,52.3,50.9,52.7,50.3,53.8,53.1)
medicine <- c(50.1,51.5,45.9,53.1,51.8,50.3,52.0,49.9,52.5,53.0)
diff <- placebo - medicine
diff
mean.diff <- mean(diff)
mean.diff
s <- sd(diff)
s
n <- count(placebo)
n <- num(placebo)
n <- length(placebo)
n
t.t <- mean.diff/(s/sqrt(n))
alpha <- 0.05
qt(alpha, df=16)
qt(alpha, df=9)
pt(t.t,df=9)
t.test(placebo,medicine,
alternative = "greater", paired = TRUE,
conf.level = 0.95)
a <- c(13.2,8.2,10.9,14.3,10.7,6.6,9.5,10.8,8.8,13.3)
b <- c(14.0,8.8,11.2,14.2,11.8,6.4,9.8,11.3,9.3,13.6)
diff <- a-b
diff
m <- mean(diff)
s <- sd(diff)
n <- length(a)
t.t <- m/(s/sqrt(n))
alpha <- 0.05
qt(alpha, df = n-1)
pt(t.t,df=n-1)
t.test(a,b, alternative = "less", paired = T,
conf.level = 0.95)
t.test(a,b, alternative = "greater", paired = T,
conf.level = 0.95)
t.test(a,b, alternative = "less", paired = T,
conf.level = 0.95)
t.test(a,b, alternative = "two.sided", paired = T,
conf.level = 0.95)
t.test(a,b, alternative = "two.sided", paired = T,
conf.level = 0.95)
t,t
t.t
var.test(mpg[mpg$class == "subcompact", "hwy" ], mpg[mpg$class == "midsize", "hwy" ])
a <- mpg[mpg$class == "subcompact", "hwy" ]
a
usa.price <- Cars93[Cars93$Origin == "USA","Price"]
a
usa.price
a
usa.price
var1 <- mpg %>%
filter(class == "subcompact" || "midsize") %>%
select(hwy)
var1 <- mpg %>%
filter(class == "subcompact" | "midsize") %>%
select(hwy)
var1 <- mpg %>%
filter(class == "subcompact" , "midsize") %>%
select(hwy)
var1 <- mpg %>%
filter(class == "subcompact" || "midsize") %>%
select(hwy)
var1 <- mpg %>%
filter(class == c("subcompact" "midsize")) %>%
select(hwy)
var1 <- mpg %>%
filter(class == c("subcompact" "midsize")) %>%
select(hwy)
var1 <- mpg %>%
filter(class == c("subcompact" "midsize")) %>%
select("hwy")
var1 <- mpg %>%
filter(class == c("subcompact" "midsize")) %>%
select(hwy)
var1 <- mpg %>%
filter(class == c("subcompact", "midsize")) %>%
select(hwy)
var1
View(var1)
var1 <- mpg %>%
filter(class == c("subcompact", "midsize")) %>%
select(hwy,class)
View(var1)
var.test(var1)
var.test(var1)
a <- as.data.frame.array(a)
a
a <- mpg[mpg$class == "subcompact", "hwy" ]
a
a <- as.numeric(a)
a <- as.numeric(a)
data <- read.table("D:/workspace/R_Statistics/ch7/data/chapter7.txt",header = T)
data
var1
var.test(var1$hwy ~ var1$class)
# p-value = 0.0004447
# reject null hypothesis
t.test(var1$hwy ~ var2$class, paired = F, var.equal = F, conf.level = 0.95)
# p-value = 0.0004447
# reject null hypothesis
t.test(var1$hwy ~ var1$class, paired = F, var.equal = F, conf.level = 0.95)
# p-value = 0.0004447
# reject null hypothesis
t.test(var1$hwy ~ var1$class, paired = T, var.equal = F, conf.level = 0.95)
# p-value = 0.0004447
# reject null hypothesis
t.test(var1$hwy ~ var1$class, paired = F, var.equal = F, conf.level = 0.95)
var2 <-
View(mpg)
premiumVregular <- mpg%>%
filter(fl == c("p","r")) %>%
select(cty)
premiumVregular <- mpg%>%
filter(fl == c("p","r")) %>%
select(cty, fl)
var.test(premiumVregular$cty, premiumVregular$fl)
var.test(premiumVregular$cty, premiumVregular$fl)
var.test(mpg[mpg$fl =="r", "cty"], mpg[mpg$fl == "p", "cty"])
var.test(mpg[mpg$fl =="r", "cty"], mpg[mpg$fl == "p", "cty"])
premiumVregular <- mpg%>%
filter(fl == c("p","r")) %>%
select(cty, fl)
premiumVregular
var.test(premiumVregular$cty, premiumVregular$fl)
View(premiumVregular)
t.test(a,b, alternative = "two.sided", paired = T,
conf.level = 0.95)
a <- c(13.2,8.2,10.9,14.3,10.7,6.6,9.5,10.8,8.8,13.3)
b <- c(14.0,8.8,11.2,14.2,11.8,6.4,9.8,11.3,9.3,13.6)
diff <- a-b
diff
n <- length(a)
m <- mean(diff)
s <- sd(diff)
t.t <- m/(s/sqrt(n))
alpha <- 0.05
qt(alpha, df = n-1)
pt(t.t,df=n-1)
t.test(a,b, alternative = "two.sided", paired = T,
conf.level = 0.95)
# 2) 일반 휘발유(r)와 고급 휘발유(p)의 도시 연비
table(mpg$fl)
var.test(mpg[mpg$fl =="r", "cty"], mpg[mpg$fl == "p", "cty"])
premiumVregular <- mpg%>%
filter(fl == c("p","r")) %>%
select(cty, fl)
View(premiumVregular)
View(premiumVregular)
var.test(premiumVregular$cty ~ premiumVregular$fl)
#p-value = 0.04918
#p value is less than 0.05 therefore cannot accept null hypothesis
t.test(premiumVregular$cty ~ premiumVregular$fl, paired = F, var.equal = F, conf.level = 0.95)
# 3) subcompact 자동차의 전륜구동(f)이냐 후륜구동(r)이냐에 따른 도시 연비
table(mpg$displ)
# 3) subcompact 자동차의 전륜구동(f)이냐 후륜구동(r)이냐에 따른 도시 연비
table(mpg$cyl)
# 3) subcompact 자동차의 전륜구동(f)이냐 후륜구동(r)이냐에 따른 도시 연비
table(mpg$drv)
drive <- mpg %>%
filter(drv == c("f","r")) %>%
select(cty, drv)
var.test(drive$cty ~ drive$drv)
t.test(drive$cty ~ drive$drv, paired = F, var.equal = T, conf.level = 0.95)
